/**
 * 
 */
package net.sf.christy.c2s;

import java.net.SocketAddress;

import net.sf.christy.util.Propertied;
import net.sf.christy.xmpp.XmlStanza;

/**
 * @author noah
 * 
 */
public interface ClientConnection extends Propertied
{
	/**
	 * Obtain the current status of this connection.
	 * 
	 * @return The status code for this connection
	 */
	public Status getStatus();

	/**
	 * Obtain the stream ID associated with this connection. Stream ID's are
	 * generated by the server and should be unique and random.
	 * 
	 * @return This connection's assigned stream ID
	 */
	public String getStreamID();

	/**
	 * Returns the time in millis when this connection is created.
	 */
	public long getCreationTime();

	/**
	 * Returns the time in millis when I/O occurred lastly.
	 */
	public long getLastIoTime();

	/**
	 * Returns the time in millis when read operation occurred lastly.
	 */
	public long getLastReadTime();

	/**
	 * Returns the time in millis when write operation occurred lastly.
	 */
	public long getLastWriteTime();

	/**
	 * Obtain the number of stanzas read.
	 *
	 * @return The number of stanzas read.
	 */
	public long getNumReadStanzas();

	/**
	 * Obtain the number of stanzas written.
	 *
	 * @return The number of stanzas written.
	 */
	public long getNumWrittenStanzas();

	/**
	 * Close this connection
	 */
	public void close();

	/**
	 * Returns true if the connection is closed.
	 *
	 * @return true if the connection is closed.
	 */
	public boolean isClosed();

	/**
	 * Returns true if this connection is secure.
	 *
	 * @return true if the connection is secure (e.g. SSL/TLS)
	 */
	public boolean isSecure();

	/**
	 * Returns the client address.
	 *
	 * @return  the client address.
	 */
	public SocketAddress getClientAddress();

	/**
	 * Send a stanza to client
	 * @param stanza
	 */
	public void writeStanza(XmlStanza stanza);
	
	/**
	 * Obtain connection's username if status is authenticated
	 * @return
	 */
	public String getUsername();
	
	/**
	 * Obtain connection's resource if status is authenticated
	 * @return
	 */
	public String getResource();
	
	/**
	 * 
	 * @author noah
	 *
	 */
	public enum Status
	{
		closed,

		connected,

		authenticated
	}

}
